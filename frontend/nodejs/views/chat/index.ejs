<head><link rel="stylesheet"  type="text/css" href="/css/chat/chatPage.css" /></head>
<div class="aiContainer">
    <h1>Chat with AI</h1>

    <form id="chat-form">
        <input type="text" id="prompt" name="prompt" placeholder="Message the AI" required> 
        <button type="submit">Send</button>  
    </form>
    
    <div id="chat-output"></div>
</div>

<script>
    $(document).ready(function() {
        $('#chat-form').on('submit', function(e) {
            e.preventDefault();

            let prompt = $('#prompt').val();

            $('#prompt').val("");

            // Generate a unique ID for the AI response
            const messageId = 'ai-response-' + Date.now(); // Unique ID based on timestamp

            // Append the user's message to the chat
            $('#chat-output').append(`
                <div class="chat-message user-message">
                    <strong>You:</strong>
                    <pre>${prompt}</pre>
                </div>
                <div id="${messageId}" class="chat-message ai-response">
                    <strong>AI:</strong> <pre>...</pre>
                </div>
            `);

            // Initialize EventSource for real-time streaming
            const eventSource = new EventSource(`/chat/getChatResponse?prompt=${encodeURIComponent(prompt)}`);

            let aiResponse = ''; // To accumulate the AI response content

            eventSource.onmessage = function(event) {
                if (event.data === "[DONE]") {
                    eventSource.close();
                    return;
                }

                try {
                    // Remove the "data: " prefix if it exists
                    const rawData = event.data.trim().startsWith("data: ") ? event.data.substring(5) : event.data;

                    // Only parse if the data is non-empty
                    if (rawData) {
                        const responseData = JSON.parse(rawData);

                        // Extract the content from the response
                        const content = responseData.choices[0].delta.content;

                        // Accumulate the content
                        aiResponse += content;

                        // Update the AI response in real-time by targeting the unique ID
                        $(`#${messageId} pre`).text(aiResponse);

                        // Scroll to the bottom of the chat output
                        $('#chat-output').scrollTop($('#chat-output')[0].scrollHeight);
                    }
                } catch (e) {
                    console.error("Error parsing response:", e);
                }
            };

            eventSource.onerror = function() {
                alert('An error occurred while streaming the response.');
                eventSource.close();
            };
        });
    });
</script>
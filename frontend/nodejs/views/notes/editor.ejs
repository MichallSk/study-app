    <!-- Reequired script & stylesheet for Quill UI -->
    <head>
        <script src="https://cdn.jsdelivr.net/npm/quill@2.0.3/dist/quill.js"></script> 
        <link href="https://cdn.jsdelivr.net/npm/quill@2.0.3/dist/quill.snow.css" rel="stylesheet">
        <!-- <script src="quill-cursors.js"></script> -->
    </head>    
    
    <!-- Contains scripts from button.ejs -->
    <%- include('buttons') %>
    <p><button id="sessionButton">Create Collab Session</button></p>
    
    <!-- Quill Text Editor always with this div id  -->
    <div id="editor"></div>


    <script>

        // Quill.register('modules/cursors', QuillCursors);
        // Quill object for API calls
        const quill = new Quill('#editor', {
            theme: 'snow',
            // modules: {
            //     cursors: true
            // }
        });
        
        const data = JSON.parse(sessionStorage.getItem("data")); // Retrieve the data temporarily stored in sessionStorage
        let currentID = data.id; // Set the current Note ID
        quill.setContents(JSON.parse(data.content)); // Append page with loaded note contents

        const ws = new WebSocket('ws://localhost:8001'); // Websocket Object

        ws.addEventListener('open', () => {
            console.log("Successfully Connected");
            ws.send(JSON.stringify({type: "init", content: currentID})); // Sends note ID to websocket server on first connection
        });

        ws.addEventListener('message', (event) => {
            const message = JSON.parse(event.data);
            if (message.type === 'update') { // updates note with contents from another ws client
                try {
                    quill.updateContents(message.data);  // Sync editor view with other websocket connections
                    quill.update();
                } catch (error){
                    console.error('Error parsing message:', error);
                }
            } else if (message.type === 'id') { // stores the ID defined by the wss
                ws.id = message.data;
                console.log(ws.id);
            }

        });

        // Sends changes to the websocket server & controller
        quill.on('text-change', (delta, oldDelta, source) => {
            if(source == 'user') {
                try {
                    const content = JSON.stringify(quill.getContents());
                    fetch('/notes/updateNote', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({ content , id: currentID }) // Sends request to update note in db to controller
                    });
                } catch (error) {
                    console.error(error);
                }

                ws.send(JSON.stringify({ type: "sync", content: delta.ops, id: currentID })); // sends updated note contents to websocket server
            }
        });

        // Generates a collab session code and stores in DB
        $('#sessionButton').on('click', function() {
            $.ajax({
                url: `/notes/generateSession?id=${encodeURIComponent(currentID)}`,
                method: 'GET',
                dataType: 'text',
                success: function(data) {
                    console.log(data); // Prints code (currently no UI element);
                },
                error: function(xhr, status, error) {
                    console.error('Error fetching AJAX content:', status, error);
                }
            });
        });

    </script>

<head>
    <script src="https://cdn.jsdelivr.net/npm/quill@2.0.3/dist/quill.js"></script>
    <link href="https://cdn.jsdelivr.net/npm/quill@2.0.3/dist/quill.snow.css" rel="stylesheet">
</head>
    <div class="indexBox">
        <p>Notes</p>
    </div>


    
    <div id="editor"></div>

    <p><button id="newNoteButton">Click to create a new note</button></p>
    <p><button id="existingNoteSweetAlertButton">Click to join an existing note</button></p>


    <div id="noteContent"></div>
    
    <!-- Passes the below content to the scripts variable in layout.ejs -->
    <%- contentFor('scripts') %>
    <script>
        let currentID;
        appendToHeading('Notes'); // Running the function I defined in layout.ejs

        const quill = new Quill('#editor', {
            theme: 'snow'
        });

        const ws = new WebSocket('ws://localhost:8001');

        ws.addEventListener('open', () => {
            console.log("Successfully Connected");
            quill.update();
            $.ajax({
                url: '/notes/generateNote',
                method: 'GET',
                dataType: 'text', 
                success: function(data) {
                    currentID = data;
                },
                error: function(xhr, status, error) {
                    console.error('Error fetching AJAX content:', status, error);
                }
            });
        })
        ws.addEventListener('message', (e) => {

            try {
                quill.updateContents(JSON.parse(e.data));
                quill.update();
            } catch (error){
                console.error('Error parsing message:', error);
            }
        });


        // Sends changes to the websocket server & controller
        quill.on('text-change', (delta, oldDelta, source) => {
            if(source == 'user') {
                try {
                    const content = JSON.stringify(quill.getContents());
                    console.log(content);
                    fetch('/notes/updateNote', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({ content , id: currentID })
                    });
                } catch (error) {
                    console.error(error);
                }

                ws.send(JSON.stringify(delta.ops));
            }
        });

        // generates a new note and places note AJAX onto view
        $('#newNoteButton').on('click', function() {
            $.ajax({
                url: '/notes/generateNote',
                method: 'GET',
                dataType: 'text', 
                success: function(data) {
                    currentID = data;
                },
                error: function(xhr, status, error) {
                    console.error('Error fetching AJAX content:', status, error);
                }
            });
        });

        $('#existingNoteSweetAlertButton').on('click', function() {
            Swal.fire({
                title: 'Enter note code',
                input: "text",
                showCloseButton: true,
                width: '600px', // Customize the size
                preConfirm: async (result) => {
                    try {
                        await fetch('/notes/getExistingNote', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify({ result })
                        }).then(response => response.json()).then(note =>{
                            console.log(note);
                            console.log(note.id);
                            currentID = note.id;
                            
                            quill.setContents(JSON.parse(note.content));
                        });
                    } catch (error) {
                        Swal.showValidationMessage(
                        error
                        );
                    }
                }
            });

        });
        
    </script>